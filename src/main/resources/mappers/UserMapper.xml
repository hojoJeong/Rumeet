<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.d204.rumeet.user.model.mapper.UserMapper">

    <resultMap id="user" type="userDto">
        <result column="id" property="id"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="profile_img" property="profile"/>
        <result column="height" property="height"/>
        <result column="weight" property="weight"/>
        <result column="oauth" property="oauth"/>
        <result column="date" property="date"/>
        <result column="state" property="state"/>
    </resultMap>
    <resultMap id="simple_user" type="simpleUserDto">
        <result column="id" property="id"/>
        <result column="email" property="email"/>
        <result column="nickname" property="nickname"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="profile_img" property="profileImg"/>
        <result column="date" property="date"/>
        <result column="state" property="state"/>
    </resultMap>

    <select id="doLogin" parameterType="LoginDto" resultMap="user">
        SELECT * FROM user_view WHERE email = #{email} and password = #{password}
    </select>

    <select id="getUserById" parameterType="int" resultMap="user">
        SELECT  FROM user_view WHERE id = #{id};
    </select>

    <select id="searchUsersByNickname" parameterType="String" resultMap="simple_user">
        SELECT id, email, nickname, age, gender, profile_img, date, state
        FROM user_view WHERE nickname LIKE #{nickname};
    </select>

    <update id="modifyUser" parameterType="ModifyUserDto">
        UPDATE user SET age = #{age}, gender = #{gender}, height = #{height}, weight = #{weight} WHERE (id = #{id});
    </update>

    <update id="delUser" parameterType="int">
        UPDATE user SET state = -1 WHERE (id = #{id});
    </update>
    
    <select id="checkDuplication" parameterType="CheckDto" resultType="int">
        SELECT COUNT(*) FROM user
        <where>
            <if test="type == 1">
                nickname like #{value}
            </if>
            <if test="type == 2">
                email like #{value}
            </if>
        </where>
    </select>

    <update id="modifyPwd" parameterType="ModifyPwdDto">
        UPDATE user SET password = #{password} WHERE email = #{email};
    </update>

    <select id="getUserOauth" parameterType="string" resultMap="user">
        SELECT * FROM user WHERE (oauth like #{tokenId});
    </select>

    <insert id="joinUser" parameterType="JoinUserDto">
        INSERT user (email, password, nickname, profile_img, gender, age, height, weight, date)
            VALUES(#{email},#{password},#{nickname},#{profile}, #{gender}, #{age},#{height},#{weight}, #{date});
    </insert>

    <insert id="joinKakaoUser" parameterType="JoinKakaoUserDto">
        INSERT user (email, password, nickname, profile_img, gender, age, height, weight , oauth, date)
            VALUES(#{email},#{password},#{nickname},#{profile}, #{gender}, #{age},#{height},#{weight}, #{oauth} , #{date});
    </insert>

    <update id="modifyUserProfile" parameterType="ProfileUserDto">
        UPDATE user SET profile_img = #{profile} WHERE id = #{id};
    </update>

</mapper>